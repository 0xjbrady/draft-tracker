name: CD

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nfl-draft-odds-backend:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./draft-tracker-frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nfl-draft-odds-frontend:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /opt/draft-tracker
            echo "Pulling latest changes..."
            git pull origin main
            
            echo "Creating backup..."
            ./scripts/backup.sh
            
            echo "Updating environment variables..."
            echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
            
            echo "Pulling new images..."
            docker-compose pull
            
            echo "Deploying new version..."
            docker-compose down
            docker-compose up -d
            
            echo "Running database migrations..."
            docker-compose exec -T backend python -m alembic upgrade head
            
            echo "Verifying deployment..."
            curl -f http://localhost:8000/health || exit 1
            
            echo "Deployment completed successfully" 